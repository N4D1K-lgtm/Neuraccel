name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:12.2.0-devel-ubuntu20.04
    steps:
    - uses: actions/checkout@v3
    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-
    - name: Cache Cargo target
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-
    - name: Install Rust
      run: |
        if ! command -v curl > /dev/null; then
          apt-get update -y && apt-get install -y curl
        fi
        if [ ! -d "$HOME/.rustup" ]; then
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        fi
        . $HOME/.cargo/env
      shell: sh -e {0}
    - name: Cache LLVM/Clang
      uses: actions/cache@v3
      with:
        path: /usr/lib/llvm-10
        key: llvm-clang-${{ runner.os }}-10
    - name: Install LLVM/Clang (if not cached)
      run: |
        if [ ! -d "/usr/lib/llvm-10" ]; then
          sudo apt-get update && sudo apt-get install -y llvm clang
        fi
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
